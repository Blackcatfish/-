/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-07-16 09:40:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hotel_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Title</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!--工具栏-->\n");
      out.write("<div id=\"tb_hotel\" style=\"height:auto\">\n");
      out.write("    <div style=\"padding:2px 5px;\">\n");
      out.write("        <form id=\"searchHotelForm\">\n");
      out.write("            id: <input class=\"easyui-textbox\" id=\"search-hotel-id\"/>\n");
      out.write("            名称: <input class=\"easyui-textbox\" id=\"search-hotel-title\">\n");
      out.write("            城市：<select id=\"search-hotel-cityId\" style=\"width:150px;\">\n");
      out.write("            <option value=\"\">请选择</option>\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </select>\n");
      out.write("            <a href=\"#\" class=\"easyui-linkbutton\" iconCls=\"icon-search\"\n");
      out.write("               onclick=\"doHotelSearch()\">搜索</a>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("    <!--添加和修改打开的是一个窗口，通过参数区分具体操作-->\n");
      out.write("    <a href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-add' \"\n");
      out.write("       onclick=\"doHotelEdit(0)\">添加</a>\n");
      out.write("    <a href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-save' \"\n");
      out.write("       onclick=\"doHotelEdit(1)\">修改</a>\n");
      out.write("    <a href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-remove' \"\n");
      out.write("       onclick=\"doHotelDelete()\">删除</a>\n");
      out.write("    <a href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-reload' \"\n");
      out.write("       onclick=\"doUpdateSolr()\">更新索引</a>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!--表格主体，注意设置工具栏引用-->\n");
      out.write("<table id=\"dg_hotel\" data-options=\"toolbar: '#tb_hotel'\">\n");
      out.write("    <thead>\n");
      out.write("    <tr>\n");
      out.write("        <!--field是Controller返回的数据列表中每个对象的属性名-->\n");
      out.write("        <!--datagrid会自动将属性值写到表格中-->\n");
      out.write("        <th data-options=\"field:'id',width:130\">ID</th>\n");
      out.write("        <!--图片不能直接显示url的文字，需要转换成<img>标签。使用formatter-->\n");
      out.write("        <th data-options=\"field:'image',width:310,formatter:formatImage\">图片</th>\n");
      out.write("        <th data-options=\"field:'title',width:170\">标题</th>\n");
      out.write("        <th data-options=\"field:'cityName',width:130\">城市</th>\n");
      out.write("        <th data-options=\"field:'price',width:130\">价格</th>\n");
      out.write("        <th data-options=\"field:'status',width:130,formatter:formatStatus\">状态</th>\n");
      out.write("    </tr>\n");
      out.write("    </thead>\n");
      out.write("</table>\n");
      out.write("<!--这个是编辑酒店的弹窗，因为编辑的内容多，所以代码写到另一个jsp中，这里以window的形式打开-->\n");
      out.write("<div id=\"hotelEditWindow\" class=\"easyui-window\" title=\"编辑酒店\"\n");
      out.write("     data-options=\"modal:true,closed:true,iconCls:'icon-save',collapsible:false,minimizable:false\"\n");
      out.write("     style=\"width:60%;height:80%;padding:10px;\">\n");
      out.write("</div>\n");
      out.write("<!--设置表格的行高，不然图片没加载之前，datagrid就初始化了，页面的高度不对-->\n");
      out.write("<style>\n");
      out.write("    #dg_hotel tr {\n");
      out.write("        height: 200px;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("<!--富文本编辑器-->\n");
      out.write("<link href=\"/media/kindeditor-4.1.10/themes/default/default.css\" type=\"text/css\" rel=\"stylesheet\">\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/media/kindeditor-4.1.10/kindeditor-all.js\"></script>\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/media/kindeditor-4.1.10/lang/zh_CN.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(function () {\n");
      out.write("        //要先初始化一下这个下拉框，否则控件没有初始化完成，datagrid就去调用了\n");
      out.write("        $(\"#search-hotel-cityId\").combobox({\n");
      out.write("            filter: function (q, row) {//自动补全，不过要多敲一个空格\n");
      out.write("                var opts = $(this).combobox('options');\n");
      out.write("                return row[opts.textField].indexOf(q) > -1;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        $(\"#dg_hotel\").datagrid({//初始化表格\n");
      out.write("            url: \"/hotel/list.html\",//获取数据的地址\n");
      out.write("            singleSelect: true,//每次只能选中一行\n");
      out.write("            pagination: true,//分页\n");
      out.write("            pageSize: 5,//每页几条\n");
      out.write("            pageList: [5, 10, 15, 20],//选择每页几条的下拉列表\n");
      out.write("            nowrap: false,//超出宽度后换行，主要是标题栏文字比较多\n");
      out.write("            queryParams: formToJson()//获取数据时的参数列表，翻页带参数\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    //格式化table中的数据，添加html样式\n");
      out.write("    function formatStatus(val, row) {\n");
      out.write("        if (val == 0) {\n");
      out.write("            return '<span style=\"color:#ff0200;\">无效</span>';\n");
      out.write("        } else {\n");
      out.write("            return '<span style=\"color:#00cf4d;\">有效</span>';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("function doHotelDelete() {\n");
      out.write("    var row = $('#dg_hotel').datagrid('getSelected')\n");
      out.write("    if (row==null){\n");
      out.write("        alert(\"请选择要删除的数据！\");\n");
      out.write("        return;\n");
      out.write("    }\n");
      out.write("    $.ajax({\n");
      out.write("        url:'");
      out.print(request.getContextPath());
      out.write("/hotel/delete.html',\n");
      out.write("        data:{\"id\":row.id},\n");
      out.write("        method:\"post\",\n");
      out.write("        success:function (result) {\n");
      out.write("            if (result.success) {\n");
      out.write("                $(\"#dg_hotel\").datagrid('reload')\n");
      out.write("                alert(\"删除成功！\")\n");
      out.write("            }else{\n");
      out.write("                alert(result.message)\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    })\n");
      out.write("}\n");
      out.write("    //将图片的url转换成<img>标签\n");
      out.write("    function formatImage(val, row) {\n");
      out.write("        return '<img src=\"' + val + '\" style=\"max-height: 200px\"/>';\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /**\n");
      out.write("     * datagrid查询数据的时候，参数必须是json对象\n");
      out.write("     * 不可以直接把搜索框searcHhotelForm直接serialize，\n");
      out.write("     * 否则会datagrid把每个字符都当成参数发出去\n");
      out.write("     * 所以这里把form表单中的每个字段都获取出来封装成json\n");
      out.write("     */\n");
      out.write("    function formToJson() {\n");
      out.write("        var param = {};\n");
      out.write("        param.id = $(\"#search-hotel-id\").val();\n");
      out.write("        param.title = $(\"#search-hotel-title\").val();\n");
      out.write("        param.cityId = $(\"#search-hotel-cityId\").combobox(\"getValue\");\n");
      out.write("        return param;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    //点击搜索按钮\n");
      out.write("    function doHotelSearch() {\n");
      out.write("        $('#dg_hotel').datagrid({queryParams: formToJson()});\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    var kingEditorParams = {\n");
      out.write("        filePostName: \"file\",//指定上传文件参数名称\n");
      out.write("        uploadJson: '/hotel/upload.html',//指定上传文件请求的url。\n");
      out.write("        dir: \"image\"//上传类型，分别为image、flash、media、file,\n");
      out.write("    }\n");
      out.write("    var editor;\n");
      out.write("\n");
      out.write("    //打开编辑的弹窗\n");
      out.write("    function doHotelEdit(type) {\n");
      out.write("        var id = \"\";\n");
      out.write("        var row = $('#dg_hotel').datagrid('getSelected');//获取当前选中的行\n");
      out.write("        type == 1 ? id = row.id : id = \"\";\n");
      out.write("        //KindEditor和easyUI有冲突\n");
      out.write("        //必须在父页面中初始化KindEditor,否则上传图片无法插入到编辑器\n");
      out.write("        $(\"#hotelEditWindow\").window({\n");
      out.write("            href: \"/hotel/go_edit.html?id=\" + id,\n");
      out.write("            onLoad: function () {\n");
      out.write("                editor = KindEditor.create($(\"#hotel-content\"), kingEditorParams);\n");
      out.write("            },\n");
      out.write("            onBeforeDestroy: function () {\n");
      out.write("                KindEditor.remove(\"#hotel-content\");\n");
      out.write("            }\n");
      out.write("        }).window('open');\n");
      out.write("    }\n");
      out.write("    function doUpdateSolr(){\n");
      out.write("        var row = $('#dg_hotel').datagrid('getSelected');//获取当前选中的行\n");
      out.write("        if(row==null){\n");
      out.write("            alert(\"请选择要更新的数据\");\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/hotel/solr.html\",\n");
      out.write("            data: \"hotelId=\"+row.id,\n");
      out.write("            method: \"post\",\n");
      out.write("            success: function (data) {\n");
      out.write("                if (!data.status) {\n");
      out.write("                    alert(data.message);\n");
      out.write("                } else {\n");
      out.write("                    alert(data.msg);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /hotel_list.jsp(16,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/hotel_list.jsp(16,12) '${cityList}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${cityList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /hotel_list.jsp(16,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("city");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                <option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${city.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${city.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</option>\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }
}
